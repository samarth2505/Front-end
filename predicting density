import tkinter as tk
from tkinter import ttk
from tkinter import messagebox
from PIL import Image, ImageTk


def open_new_window_1():
    """Open a new window with two options and a back button."""
    # Create a new window
    new_window = tk.Toplevel(root)
    new_window.title("PREDICT TRAFFIC DENSITY")
    new_window.geometry("500x500")


    new_image_path = "C:/Users/samarth/Documents/CIE PROJECT/MAIN ge MAIN.jpg"  # Replace with the path to your new image file
    new_image = Image.open(new_image_path)
    
    # Resize the image for the new window
    desired_width = 400  # Set the desired width in pixels
    desired_height = 400  # Set the desired height in pixels
    resized_new_image = new_image.resize((desired_width, desired_height))
    
    # Convert the resized image to PhotoImage for Tkinter
    new_photo = ImageTk.PhotoImage(resized_new_image)
    
    # Create a label to display the resized image in the new window
    new_image_label = ttk.Label(new_window, image=new_photo)
    new_image_label.image = new_photo  # Keep a reference to avoid garbage collection
    new_image_label.pack(side='left', padx=10, pady=10)

    new_image_path_1 = "C:/Users/samarth/Documents/CIE PROJECT/sample size va time set.jpg"  # Replace with the path to your new image file
    new_image_1 = Image.open(new_image_path_1)
    
    # Resize the image for the new window
    desired_width_1 = 400  # Set the desired width in pixels
    desired_height_1 = 400  # Set the desired height in pixels
    resized_new_image_1 = new_image_1.resize((desired_width_1, desired_height_1))
    
    # Convert the resized image to PhotoImage for Tkinter
    new_photo_1 = ImageTk.PhotoImage(resized_new_image_1)
    
    # Create a label to display the resized image in the new window
    new_image_label_1 = ttk.Label(new_window, image=new_photo_1)
    new_image_label_1.image = new_photo_1  # Keep a reference to avoid garbage collection
    new_image_label_1.pack(side='left', padx=10, pady=10)

    back_button = ttk.Button(new_window, text="Back To Adugodi", command=new_window.destroy)
    back_button.pack(side='bottom',pady=20)

    option_button_new = ttk.Button(new_window, text="Open Input Window", command=on_option_click_11)
    option_button_new.pack(pady=30)


def open_new_window_2():
    input_window = tk.Toplevel(root)
    input_window.title("Input Window")
    input_window.geometry("300x200")
    
    
    
    prompt_label = ttk.Label(input_window, text="Enter your input:")
    prompt_label.pack(pady=10)
    
    # Create an entry widget for the user to input their text
    input_entry = ttk.Entry(input_window)
    input_entry.pack(pady=10)
    
    # Define a function to process the input and display the output
    def process_input():
        user_input = float(input_entry.get())
        
        # Apply conditions to the input and display an output
        if user_input>8 and user_input<9:
            # If the input is a numeric value, display a message box
            messagebox.showinfo("Result", "There is low traffic ,easily can travel")
        elif user_input>9 and user_input<10:
            # If the input is not numeric, display a different message box
            messagebox.showinfo("Result", "There is moderate traffic,will be a delay")
        elif user_input>10 and user_input<12:
            messagebox.showinfo("Result", "There is increasing traffic check for alternatives")
        else:
            messagebox.showinfo("Result", "select time zone between 8 to 12 am")
        # Clear the entry field after processing
        input_entry.delete(0, tk.END)
    
    # Create a button to submit the input for processing
    submit_button = ttk.Button(input_window, text="Submit", command=process_input)
    submit_button.pack(pady=10)
    
    # Create a button to close the window and go back to the dashboard
    close_button = ttk.Button(input_window, text="Close", command=input_window.destroy)
    close_button.pack(pady=10)


    

def on_option_click_11():
    # This function is called when the option button in the dashboard is clicked
    open_new_window_2()  # Open the new window with the prompt for user input



    
    


def open_new_window():
    """Open a new window with two options and a back button."""
    # Create a new window
    new_window = tk.Toplevel(root)
    new_window.title("Adugodi Junction")
    new_window.geometry("300x200")


    new_image_path = "C:/Users/samarth/Documents/CIE PROJECT/MAIN ge MAIN.jpg"  # Replace with the path to your new image file
    new_image = Image.open(new_image_path)
    
    # Resize the image for the new window
    desired_width = 250  # Set the desired width in pixels
    desired_height = 250  # Set the desired height in pixels
    resized_new_image = new_image.resize((desired_width, desired_height))
    
    # Convert the resized image to PhotoImage for Tkinter
    new_photo = ImageTk.PhotoImage(resized_new_image)
    
    # Create a label to display the resized image in the new window
    new_image_label = ttk.Label(new_window, image=new_photo)
    new_image_label.image = new_photo  # Keep a reference to avoid garbage collection
    new_image_label.pack(pady=10)
    
    # Create two option buttons
    button_one = ttk.Button(new_window, text="PREDICT TRAFFIC DENSITY", command=on_option_one_click)
    button_one.pack(pady=10)
    
    button_two = ttk.Button(new_window, text="PREV TRAFFIC DENSITY", command=on_option_two_click)
    button_two.pack(pady=10)
    
    # Create a button to go back to the dashboard
    back_button = ttk.Button(new_window, text="Back to Dashboard", command=new_window.destroy)
    back_button.pack(pady=20)

def on_option_one_click():
    # This function is called when Option One is clicked
    open_new_window_1()

def on_option_two_click():
    # This function is called when Option Two is clicked
    messagebox.showinfo("PREV TRAFFIC DENSITY", "You selected Option Two")


def on_option_click():
    # This function is called when the option button is clicked
    open_new_window()

# Create the main application window
root = tk.Tk()
root.title("Dashboard")

# Set the window size
root.geometry("400x500")

# Create a heading label
heading_label = ttk.Label(root, text="TOM TOM SAVE US", font=("Arial", 16))
heading_label.pack(pady=20)

# Load an image
image_path = "C:/Users/samarth/Documents/CIE PROJECT/starting image.jpg"  # Replace with the path to your image file
image = Image.open(image_path)

# Resize the image to desired dimensions
desired_width = 200  # Set the desired width in pixels
desired_height = 200  # Set the desired height in pixels
resized_image = image.resize((desired_width, desired_height))

# Convert the resized image to PhotoImage for Tkinter
photo = ImageTk.PhotoImage(resized_image)

# Create a label to display the resized image
image_label = ttk.Label(root, image=photo)
image_label.pack(pady=10)


# Create a text label under the image
text_label = ttk.Label(root, text="junctions available")
text_label.pack(pady=10)

# Create an option button under the text label
option_button = ttk.Button(root, text="Adugodi Junction", command=on_option_click)
option_button.pack(pady=20)

# Start the main event loop
root.mainloop()
